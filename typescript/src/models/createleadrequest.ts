/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CreateLeadRequest = {
  /**
   * First name of the lead
   */
  firstName: string;
  /**
   * Last name of the lead
   */
  lastName: string;
  /**
   * Email address of the lead
   */
  email?: string | undefined;
  /**
   * Company name
   */
  company?: string | undefined;
  /**
   * Job title
   */
  title?: string | undefined;
  /**
   * LinkedIn profile URL
   */
  linkedinUrl?: string | undefined;
};

/** @internal */
export const CreateLeadRequest$inboundSchema: z.ZodType<
  CreateLeadRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  first_name: z.string(),
  last_name: z.string(),
  email: z.string().optional(),
  company: z.string().optional(),
  title: z.string().optional(),
  linkedin_url: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "first_name": "firstName",
    "last_name": "lastName",
    "linkedin_url": "linkedinUrl",
  });
});

/** @internal */
export type CreateLeadRequest$Outbound = {
  first_name: string;
  last_name: string;
  email?: string | undefined;
  company?: string | undefined;
  title?: string | undefined;
  linkedin_url?: string | undefined;
};

/** @internal */
export const CreateLeadRequest$outboundSchema: z.ZodType<
  CreateLeadRequest$Outbound,
  z.ZodTypeDef,
  CreateLeadRequest
> = z.object({
  firstName: z.string(),
  lastName: z.string(),
  email: z.string().optional(),
  company: z.string().optional(),
  title: z.string().optional(),
  linkedinUrl: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    firstName: "first_name",
    lastName: "last_name",
    linkedinUrl: "linkedin_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateLeadRequest$ {
  /** @deprecated use `CreateLeadRequest$inboundSchema` instead. */
  export const inboundSchema = CreateLeadRequest$inboundSchema;
  /** @deprecated use `CreateLeadRequest$outboundSchema` instead. */
  export const outboundSchema = CreateLeadRequest$outboundSchema;
  /** @deprecated use `CreateLeadRequest$Outbound` instead. */
  export type Outbound = CreateLeadRequest$Outbound;
}

export function createLeadRequestToJSON(
  createLeadRequest: CreateLeadRequest,
): string {
  return JSON.stringify(
    CreateLeadRequest$outboundSchema.parse(createLeadRequest),
  );
}

export function createLeadRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateLeadRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateLeadRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateLeadRequest' from JSON`,
  );
}
