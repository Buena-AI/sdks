/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const Details$inboundSchema = z.object({});
/** @internal */
export const Details$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Details$;
(function (Details$) {
    /** @deprecated use `Details$inboundSchema` instead. */
    Details$.inboundSchema = Details$inboundSchema;
    /** @deprecated use `Details$outboundSchema` instead. */
    Details$.outboundSchema = Details$outboundSchema;
})(Details$ || (Details$ = {}));
export function detailsToJSON(details) {
    return JSON.stringify(Details$outboundSchema.parse(details));
}
export function detailsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Details$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Details' from JSON`);
}
//# sourceMappingURL=error.js.map