/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const CreateLeadRequest$inboundSchema = z.object({
    first_name: z.string(),
    last_name: z.string(),
    email: z.string().optional(),
    company: z.string().optional(),
    title: z.string().optional(),
    linkedin_url: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "first_name": "firstName",
        "last_name": "lastName",
        "linkedin_url": "linkedinUrl",
    });
});
/** @internal */
export const CreateLeadRequest$outboundSchema = z.object({
    firstName: z.string(),
    lastName: z.string(),
    email: z.string().optional(),
    company: z.string().optional(),
    title: z.string().optional(),
    linkedinUrl: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        firstName: "first_name",
        lastName: "last_name",
        linkedinUrl: "linkedin_url",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateLeadRequest$;
(function (CreateLeadRequest$) {
    /** @deprecated use `CreateLeadRequest$inboundSchema` instead. */
    CreateLeadRequest$.inboundSchema = CreateLeadRequest$inboundSchema;
    /** @deprecated use `CreateLeadRequest$outboundSchema` instead. */
    CreateLeadRequest$.outboundSchema = CreateLeadRequest$outboundSchema;
})(CreateLeadRequest$ || (CreateLeadRequest$ = {}));
export function createLeadRequestToJSON(createLeadRequest) {
    return JSON.stringify(CreateLeadRequest$outboundSchema.parse(createLeadRequest));
}
export function createLeadRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateLeadRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateLeadRequest' from JSON`);
}
//# sourceMappingURL=createleadrequest.js.map