/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as models from "../index.js";
/** @internal */
export const ListLeadsRequest$inboundSchema = z.object({
    limit: z.number().int().default(50),
    offset: z.number().int().default(0),
});
/** @internal */
export const ListLeadsRequest$outboundSchema = z.object({
    limit: z.number().int().default(50),
    offset: z.number().int().default(0),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListLeadsRequest$;
(function (ListLeadsRequest$) {
    /** @deprecated use `ListLeadsRequest$inboundSchema` instead. */
    ListLeadsRequest$.inboundSchema = ListLeadsRequest$inboundSchema;
    /** @deprecated use `ListLeadsRequest$outboundSchema` instead. */
    ListLeadsRequest$.outboundSchema = ListLeadsRequest$outboundSchema;
})(ListLeadsRequest$ || (ListLeadsRequest$ = {}));
export function listLeadsRequestToJSON(listLeadsRequest) {
    return JSON.stringify(ListLeadsRequest$outboundSchema.parse(listLeadsRequest));
}
export function listLeadsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListLeadsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListLeadsRequest' from JSON`);
}
/** @internal */
export const ListLeadsResponse$inboundSchema = z.object({
    leads: z.array(models.Lead$inboundSchema).optional(),
    total: z.number().int().optional(),
});
/** @internal */
export const ListLeadsResponse$outboundSchema = z.object({
    leads: z.array(models.Lead$outboundSchema).optional(),
    total: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListLeadsResponse$;
(function (ListLeadsResponse$) {
    /** @deprecated use `ListLeadsResponse$inboundSchema` instead. */
    ListLeadsResponse$.inboundSchema = ListLeadsResponse$inboundSchema;
    /** @deprecated use `ListLeadsResponse$outboundSchema` instead. */
    ListLeadsResponse$.outboundSchema = ListLeadsResponse$outboundSchema;
})(ListLeadsResponse$ || (ListLeadsResponse$ = {}));
export function listLeadsResponseToJSON(listLeadsResponse) {
    return JSON.stringify(ListLeadsResponse$outboundSchema.parse(listLeadsResponse));
}
export function listLeadsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListLeadsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListLeadsResponse' from JSON`);
}
//# sourceMappingURL=listleads.js.map