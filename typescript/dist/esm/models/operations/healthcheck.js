/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const HealthCheckResponse$inboundSchema = z.object({
    status: z.string().optional(),
    timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v))
        .optional(),
});
/** @internal */
export const HealthCheckResponse$outboundSchema = z.object({
    status: z.string().optional(),
    timestamp: z.date().transform(v => v.toISOString()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var HealthCheckResponse$;
(function (HealthCheckResponse$) {
    /** @deprecated use `HealthCheckResponse$inboundSchema` instead. */
    HealthCheckResponse$.inboundSchema = HealthCheckResponse$inboundSchema;
    /** @deprecated use `HealthCheckResponse$outboundSchema` instead. */
    HealthCheckResponse$.outboundSchema = HealthCheckResponse$outboundSchema;
})(HealthCheckResponse$ || (HealthCheckResponse$ = {}));
export function healthCheckResponseToJSON(healthCheckResponse) {
    return JSON.stringify(HealthCheckResponse$outboundSchema.parse(healthCheckResponse));
}
export function healthCheckResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => HealthCheckResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'HealthCheckResponse' from JSON`);
}
//# sourceMappingURL=healthcheck.js.map