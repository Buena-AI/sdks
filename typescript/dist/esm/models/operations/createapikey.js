/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CreateApiKeyRequest$inboundSchema = z.object({
    name: z.string().optional(),
    permissions: z.array(z.string()).optional(),
});
/** @internal */
export const CreateApiKeyRequest$outboundSchema = z.object({
    name: z.string().optional(),
    permissions: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateApiKeyRequest$;
(function (CreateApiKeyRequest$) {
    /** @deprecated use `CreateApiKeyRequest$inboundSchema` instead. */
    CreateApiKeyRequest$.inboundSchema = CreateApiKeyRequest$inboundSchema;
    /** @deprecated use `CreateApiKeyRequest$outboundSchema` instead. */
    CreateApiKeyRequest$.outboundSchema = CreateApiKeyRequest$outboundSchema;
})(CreateApiKeyRequest$ || (CreateApiKeyRequest$ = {}));
export function createApiKeyRequestToJSON(createApiKeyRequest) {
    return JSON.stringify(CreateApiKeyRequest$outboundSchema.parse(createApiKeyRequest));
}
export function createApiKeyRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateApiKeyRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateApiKeyRequest' from JSON`);
}
//# sourceMappingURL=createapikey.js.map